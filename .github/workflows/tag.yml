name: Create GitHub Release from PR Title

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    name: Create Release and Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all history is available

      - name: Get Merged PR Title
        id: pr_info
        run: |
          # Fetch the latest PR title that was merged into main
          PR_TITLE=$(gh pr list --base main --state merged --limit 1 --json title --jq '.[0].title')

          echo "PR Title: $PR_TITLE"
          
          # Extract the version number (assuming PR title contains something like "Release v1.2.3")
          VERSION=$(echo "$PR_TITLE" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+')

          if [[ -z "$VERSION" ]]; then
            echo "❌ No version found in PR title. Exiting."
            exit 1
          fi

          echo "Version extracted: $VERSION"
          echo "release_version=$VERSION" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        run: |
          git tag ${{ env.release_version }}
          git push origin ${{ env.release_version }}

      - name: Generate Release Notes
        run: |
          echo "Generating release notes..."
          conventional-changelog -p angular -o RELEASE_NOTES.md --release-count 1
          cat RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.release_version }}
          name: Release ${{ env.release_version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
